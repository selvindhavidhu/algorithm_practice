plugins {
    id 'java-library'
    id 'maven-publish'
    id("net.ltgt.errorprone") version "4.2.0"
    id "com.diffplug.spotless" version "7.0.0.BETA1"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // https://mvnrepository.com/artifact/com.uber.nullaway/nullaway
    runtimeOnly("com.uber.nullaway:nullaway:0.12.7")

    // https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-annotations
    implementation("com.github.spotbugs:spotbugs-annotations:4.9.3")

    // https://mvnrepository.com/artifact/com.google.errorprone/error_prone_annotations
    //implementation("com.google.errorprone:error_prone_annotations:2.38.0")

    // https://mvnrepository.com/artifact/com.google.errorprone/javac
    //implementation("com.google.errorprone:javac:9+181-r4173-1")

    errorprone "com.google.errorprone:error_prone_core:2.38.0"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"

    testImplementation libs.org.testng.testng
    testImplementation libs.org.assertj.assertj.core
}

group = 'org.selvin'
version = '1.0-SNAPSHOT'
description = 'algorithm_practice'
java.sourceCompatibility = JavaVersion.VERSION_23

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces 4
        endWithNewline()
    }

    java {
        importOrder()
        removeUnusedImports()
        cleanthat()
        palantirJavaFormat()
        formatAnnotations()
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    // remove the if condition if you want to run NullAway on test code
    if (!name.toLowerCase().contains("test")) {
        options.errorprone {
            option("NullAway:AnnotatedPackages", "org.selvin")
        }
    }
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useTestNG()
}
